Make.WithNamespace("Cuttlefish.ExampleApp.Domain");
Make.InTheBoundedContextOf("Orders");

Service.ServiceNamed("Orders")
        .ThatCan("OpenCart")
        .And()
        .ThatRaises("CartOpened")
        .And()
        .ThatRaises("CartOpenFailed")
        .WithParameter<string>("Reason")
        .Done();

Aggregate.AggregateNamed("Cart")
            .WithField<object>("Items")
            .ThatCan("ConvertToOrder")
            .And()
            .ThatRaises("OrderPlaced")
            .And()
            .ThatCan("ClearCart")
            .And()
            .ThatCan("AddItem")
                .WithParameter<Guid>("ProductId")
                .WithParameter<int>("Quantity")
            .And()
            .ThatRaises("ItemAddedToCart")
                .WithParameter<Guid>("ProductId")
                .WithParameter<int>("Quantity")
            .And()
            .ThatCan("RemoveItem")
                .WithParameter<Guid>("ProductId")
            .Done();


Aggregate.AggregateNamed("Order")
            .WithField<List<object>>("Items")
            .WithField<int>("Total")
            .WithField<bool>("Cancelled")
            .WithField<bool>("Completed")
            .ThatCan("Cancel")
            .And()
            .ThatRaises("OrderCancelled")
            .And()
            .ThatCan("CompleteOrder")
            .And()
            .ThatRaises("OrderCompleted")
            .Done();